<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.iocoder.yudao.module.dataqc.dal.mysql.batchimport.BatchImportTaskMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="cn.iocoder.yudao.module.dataqc.dal.dataobject.batchimport.BatchImportTaskDO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="task_no" jdbcType="VARCHAR" property="taskNo"/>
        <result column="task_name" jdbcType="VARCHAR" property="taskName"/>
        <result column="file_name" jdbcType="VARCHAR" property="fileName"/>
        <result column="file_path" jdbcType="VARCHAR" property="filePath"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="total_files" jdbcType="INTEGER" property="totalFiles"/>
        <result column="success_files" jdbcType="INTEGER" property="successFiles"/>
        <result column="fail_files" jdbcType="INTEGER" property="failFiles"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="error_msg" jdbcType="LONGVARCHAR" property="errorMsg"/>
        <result column="result_detail" jdbcType="LONGVARCHAR" property="resultDetail"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="updater" jdbcType="VARCHAR" property="updater"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
    </resultMap>

    <!-- 查询指定状态的任务数量 -->
    <select id="selectCountByStatus" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM system_batch_import_task
        WHERE deleted = 0
          AND status = #{status}
    </select>

    <!-- 查询任务统计信息 -->
    <select id="selectTaskStatistics" resultType="map">
        SELECT
        <choose>
            <when test="groupBy == 'day'">
                DATE(create_time) as date_key,
                DATE_FORMAT(create_time, '%Y-%m-%d') as date_display
            </when>
            <when test="groupBy == 'month'">
                DATE_FORMAT(create_time, '%Y-%m') as date_key,
                DATE_FORMAT(create_time, '%Y年%m月') as date_display
            </when>
            <otherwise>
                DATE(create_time) as date_key,
                DATE_FORMAT(create_time, '%Y-%m-%d') as date_display
            </otherwise>
        </choose>,
        COUNT(*) as total_count,
        SUM(CASE WHEN status = 0 THEN 1 ELSE 0 END) as pending_count,
        SUM(CASE WHEN status = 1 THEN 1 ELSE 0 END) as processing_count,
        SUM(CASE WHEN status = 2 THEN 1 ELSE 0 END) as success_count,
        SUM(CASE WHEN status = 3 THEN 1 ELSE 0 END) as fail_count,
        SUM(CASE WHEN status = 4 THEN 1 ELSE 0 END) as partial_success_count,
        ROUND(AVG(CASE
        WHEN start_time IS NOT NULL AND end_time IS NOT NULL
        THEN TIMESTAMPDIFF(SECOND, start_time, end_time)
        ELSE NULL
        END), 2) as avg_duration_seconds
        FROM system_batch_import_task
        WHERE deleted = 0
        AND create_time BETWEEN #{startTime} AND #{endTime}
        GROUP BY date_key
        ORDER BY date_key DESC
    </select>

    <!-- 查询需要清理的过期任务 -->
    <select id="selectExpiredTasks" resultMap="BaseResultMap">
        SELECT *
        FROM system_batch_import_task
        WHERE deleted = 0
          AND create_time &lt; #{beforeTime}
          AND status IN (2, 3, 4) -- 只清理已完成的任务
        ORDER BY create_time ASC
    </select>

    <!-- 查询正在进行的任务 -->
    <select id="selectProcessingTasks" resultMap="BaseResultMap">
        SELECT *
        FROM system_batch_import_task
        WHERE deleted = 0
          AND status = 1 -- 处理中状态
        ORDER BY start_time ASC
    </select>

    <!-- 批量更新任务状态 -->
    <update id="updateStatusBatch">
        UPDATE system_batch_import_task
        SET status = #{status},
        update_time = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND deleted = 0
    </update>

</mapper>